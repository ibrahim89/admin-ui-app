{"version":3,"sources":["services/UserService.js","components/Pagination.js","components/User.js","App.js","serviceWorker.js","index.js"],"names":["axios","get","Pagination","showPerPage","onPaginationChange","total","useState","counter","setCounter","useEffect","value","onButtonClick","type","Math","ceil","className","aria-label","class","href","onClick","Array","fill","map","el","index","User","searchVal","setSearchVal","users","setUsers","tableFilter","setTableFilter","UserService","getUsers","then","res","data","setDataSource","dataSource","id","name","email","role","user","setUser","deletePopup","setDeletePopup","clearUser","show","setShow","action","setAction","handleClose","handleChange","e","target","console","log","editUser","deleteConfirm","tempUser","setTempUser","onItemCheck","item","deleteConfirmTemplate","Modal","size","onHide","aria-labelledby","Header","closeButton","Body","Footer","Button","variant","message","success","length","filter","addUserForm","Form","Group","Label","Control","onChange","placeholder","editUserForm","userModal","Title","newArr","obj","start","end","pagination","setPagination","filterTable","o","Object","keys","some","k","String","toLowerCase","includes","Table","striped","bordered","hover","slice","key","namesToDeleteSet","Set","has","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qSAYe,M,wFALX,WACI,OAAOA,IAAMC,IANK,sF,MCiFXC,EAjFI,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,mBAAoBC,EAAY,EAAZA,MAErD,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACAC,qBAAU,WACR,IAAMC,EAAQP,EAAcI,EAC5BH,EAAmBM,EAAQP,EAAaO,KACvC,CAACH,IAEJ,IAAMI,EAAgB,SAACC,GACR,WAATA,EAEAJ,EADc,IAAZD,EACS,EAEAA,EAAU,GAEL,WAATK,IACLC,KAAKC,KAAKT,EAAQF,KAAiBI,EACrCC,EAAWD,GAEXC,EAAWD,EAAU,KAI3B,OACE,yBAAKQ,UAAU,iCACb,yBAAKC,aAAW,2BACd,wBAAIC,MAAM,cACV,wBAAIA,MAAM,aACN,uBACEA,MAAM,YACNC,KAAK,KACLC,QAAS,kBAAMX,EAAW,KAH5B,SAQF,wBAAIS,MAAM,aACR,uBACEA,MAAM,YACNC,KAAK,KACLC,QAAS,kBAAMR,EAAc,YAH/B,WASD,IAAIS,MAAMP,KAAKC,KAAKT,EAAQF,IAAckB,KAAK,IAAIC,KAAI,SAACC,EAAIC,GAAL,OACtD,wBAAIP,MAAK,oBAAeO,EAAQ,IAAMjB,EAAU,SAAW,OACzD,uBACEU,MAAM,YACNC,KAAK,KACLC,QAAS,kBAAMX,EAAWgB,EAAQ,KAEjCA,EAAQ,OAIf,wBAAIP,MAAM,aACR,uBACEA,MAAM,YACNC,KAAK,KACLC,QAAS,kBAAMR,EAAc,YAH/B,WAQF,wBAAIM,MAAM,aACR,uBACEA,MAAM,YACNC,KAAK,KACLC,QAAS,kBAAMX,EAAWK,KAAKC,KAAKT,EAAMF,MAH5C,a,OC7DG,SAASsB,IACtB,MAAkCnB,mBAAS,IAA3C,mBAAOoB,EAAP,KAAkBC,EAAlB,KACA,EAA0BrB,mBAAS,IAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KACA,EAAsCvB,mBAAS,IAA/C,mBAAOwB,EAAP,KAAoBC,EAApB,KAEAtB,qBAAU,WACRuB,EAAYC,WAAWC,MAAK,SAACC,GAC3BN,EAASM,EAAIC,MACbC,EAAcF,EAAIC,WAEnB,IAEH,MAAoC9B,mBAASsB,GAA7C,mBAAOU,EAAP,KAAmBD,EAAnB,KAiBA,EAAwB/B,mBAAS,CAC/BiC,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,KAAM,KAJR,mBAAOC,EAAP,KAAaC,EAAb,KAMA,EAAsCtC,oBAAS,GAA/C,mBAAOuC,EAAP,KAAoBC,EAApB,KACMC,EAAY,WAOhBH,EANW,CACTL,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,KAAM,MAIV,EAAwBpC,oBAAS,GAAjC,mBAAO0C,EAAP,KAAaC,EAAb,KACA,EAA4B3C,mBAAS,OAArC,mBAAO4C,EAAP,KAAeC,EAAf,KAEMC,EAAc,WAClBH,GAAQ,GACRE,EAAU,QACVJ,KAKIM,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBf,EAAR,EAAQA,KAAM9B,EAAd,EAAcA,MACd8C,QAAQC,IAAI,OAAQ/C,GACpBkC,EAAQ,2BACHD,GADE,kBAEJH,EAAO9B,MAKNgD,EAAW,SAACf,GAChBa,QAAQC,IAAI,MAAOd,GACnBQ,EAAU,QACVF,GAAQ,GACRL,EAAQD,IAqDJgB,EAAgB,SAAChB,GACrBC,EAAQD,GACRG,GAAe,IAEjB,EAAgCxC,mBAAS,IAAzC,mBAAOsD,EAAP,KAAiBC,EAAjB,KAEMC,GAAc,SAACC,GACnBF,EAAY,CAACE,GAAF,mBAAWH,MAwBlBI,GACJ,oCACE,kBAACC,EAAA,EAAD,CACEC,KAAK,KACLlB,KAAMH,EACNsB,OAAQ,kBAAMrB,GAAe,IAC7BsB,kBAAgB,gCAEhB,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GAAzB,eACA,kBAACL,EAAA,EAAMM,KAAP,KACE,iEAEF,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACC,EAAA,EAAD,CACEC,QAAQ,YACRR,KAAK,KACL/C,QAAS,WACP2B,GAAe,KAJnB,MASA,kBAAC2B,EAAA,EAAD,CAAQC,QAAQ,UAAUR,KAAK,KAAK/C,QAtEzB,WACjBqC,QAAQC,IAAI,cAAed,GAC3BgC,IAAQC,QAAQ,6BAChB9B,GAAe,GACZpB,EAAUmD,OAAO,EAClB9C,EAAeD,EAAYgD,QAAO,SAACxB,GAChC,OAAOA,IAAMX,MAGhBN,EACEC,EAAWwC,QAAO,SAACxB,GACjB,OAAOA,IAAMX,QA2Db,UAOFoC,GACJ,oCACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYlE,UAAU,QACpB,kBAACiE,EAAA,EAAKE,MAAN,kBACA,kBAACF,EAAA,EAAKG,QAAN,CACEvE,KAAK,OACL4B,KAAK,OACL9B,MAAOiC,EAAKH,KACZ4C,SAAU,SAAC9B,GAAD,OAAOD,EAAaC,IAC9B+B,YAAY,mBAEd,kBAACL,EAAA,EAAKE,MAAN,cACA,kBAACF,EAAA,EAAKG,QAAN,CACEvE,KAAK,QACL4B,KAAK,QACL9B,MAAOiC,EAAKF,MACZ2C,SAAU/B,EACVgC,YAAY,gBAEd,kBAACL,EAAA,EAAKE,MAAN,eACA,kBAACF,EAAA,EAAKG,QAAN,CACEvE,KAAK,OACL4B,KAAK,OACL9B,MAAOiC,EAAKD,KACZ0C,SAAU/B,EACVgC,YAAY,oBAMhBC,GACJ,oCACE,kBAACN,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYlE,UAAU,QACpB,kBAACiE,EAAA,EAAKE,MAAN,kBACA,kBAACF,EAAA,EAAKG,QAAN,CACEvE,KAAK,OACL4B,KAAK,OACL9B,MAAOiC,EAAKH,KACZ4C,SAAU,SAAC9B,GAAD,OAAOD,EAAaC,IAC9B+B,YAAY,mBAEd,kBAACL,EAAA,EAAKE,MAAN,cACA,kBAACF,EAAA,EAAKG,QAAN,CACEvE,KAAK,QACL4B,KAAK,QACL9B,MAAOiC,EAAKF,MACZ2C,SAAU,SAAC9B,GAAD,OAAOD,EAAaC,IAC9B+B,YAAY,gBAEd,kBAACL,EAAA,EAAKE,MAAN,eACA,kBAACF,EAAA,EAAKG,QAAN,CACEvE,KAAK,OACL4B,KAAK,OACL9B,MAAOiC,EAAKD,KACZ0C,SAAU,SAAC9B,GAAD,OAAOD,EAAaC,IAC9B+B,YAAY,oBAMhBE,GACJ,oCACE,kBAACtB,EAAA,EAAD,CAAOjB,KAAMA,EAAMmB,OAAQf,GACzB,kBAACa,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMuB,MAAP,KACc,QAAXtC,EAAmB,eAAiB,cAGzC,kBAACe,EAAA,EAAMM,KAAP,KAAwB,QAAXrB,EAAmB6B,GAAcO,IAC9C,kBAACrB,EAAA,EAAMO,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYvD,QAASiC,GAArC,SAGA,kBAACqB,EAAA,EAAD,CAAQC,QAAQ,UAAUvD,QA5LjB,WAEf,GADAqC,QAAQC,IAAI,OAAQd,GACjBjB,EAAUmD,OAAQ,EAAE,CACvB,IAAMY,EAAS3D,EAAYR,KAAI,SAAAoE,GAC3B,OAAIA,EAAInD,KAAOI,EAAKJ,GACXI,EAGF+C,KAGT3D,EAAe0D,OACZ,CACH,IAAMA,EAASnD,EAAWhB,KAAI,SAAAoE,GAC5B,OAAIA,EAAInD,KAAOI,EAAKJ,GACXI,EAGF+C,KAGTrD,EAAcoD,GAGhB1C,IAEe,QAAXG,EACFyB,IAAQC,QAAQ,2BAEhBD,IAAQC,QAAQ,6BAGlB3B,GAAQ,KA6JY,QAAXC,EAAmB,eAAiB,qBAO/C,GAAsC5C,mBAAS,IAA/C,qBAAOH,GAAP,MACA,IADA,MACoCG,mBAAS,CAC3CqF,MAAO,EACPC,IAAKzF,MAFP,qBAAO0F,GAAP,MAAmBC,GAAnB,MAUA,OACE,oCACE,yBAAK/E,UAAU,kBACb,6BACE,2BACEH,KAAK,OACLK,MAAM,eACNoE,YAAY,WACZ3E,MAAOgB,EACP0D,SAlRS,SAAC9B,GAClB,GAAuB,KAAnBA,EAAEC,OAAO7C,MAAc,CACzBiB,EAAa2B,EAAEC,OAAO7C,OACtB,IAAMqF,EAAczD,EAAWwC,QAAO,SAACkB,GAAD,OACpCC,OAAOC,KAAKF,GAAGG,MAAK,SAACC,GAAD,OAClBC,OAAOL,EAAEI,IAAIE,cAAcC,SAASjD,EAAEC,OAAO7C,MAAM4F,qBAGvD9C,QAAQC,IAAI,cAAesC,GAC3BhE,EAAe,YAAIgE,SAEnBpE,EAAa2B,EAAEC,OAAO7C,OACtB2B,EAAc,YAAIC,QA0QhB,kBAACkE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,iCACA,oCACA,qCACA,oCACA,wCAGJ,+BACGjF,EAAUmD,OAAS,EAChB/C,EACG8E,MAAMf,GAAWF,MAAOE,GAAWD,KACnCtE,KAAI,SAACoE,GACJ,OACE,wBAAImB,IAAKnB,EAAInD,IACX,4BACA,2BACM3B,KAAK,WACLK,MAAM,uBACNmE,SAAU,SAAC9B,GAAD,OAAOQ,GAAY4B,OAGnC,4BAAKA,EAAIlD,MACT,4BAAKkD,EAAIjD,OACT,4BAAKiD,EAAIhD,MACT,4BACE,kBAAC+B,EAAA,EAAD,CAAQC,QAAQ,OAAOvD,QAAS,kBAAMuC,EAASgC,KAA/C,SAIF,4BACE,kBAACjB,EAAA,EAAD,CACEC,QAAQ,SACRvD,QAAS,kBAAMwC,EAAc+B,KAF/B,eAUVpD,EACGsE,MAAMf,GAAWF,MAAOE,GAAWD,KACnCtE,KAAI,SAACoE,GACJ,OACE,wBAAImB,IAAKnB,EAAInD,IACX,4BAEI,2BACE3B,KAAK,WACLK,MAAM,uBACNmE,SAAU,SAAC9B,GAAD,OAAOQ,GAAY4B,OAInC,4BAAKA,EAAIlD,MACT,4BAAKkD,EAAIjD,OACT,4BAAKiD,EAAIhD,MACT,4BAEA,uBAAGxB,KAAK,IAAIH,UAAU,iBAAgB,uBAAIA,UAAU,aAAaI,QAAS,kBAAMuC,EAASgC,OACxF,uBAAGxE,KAAK,IAAIH,UAAU,mBAAkB,uBAAGA,UAAU,oBAAqBI,QAAS,kBAAMwC,EAAc+B,cAQxH,yBAAK3E,UAAU,OACb,yBAAKA,UAAU,SACb,kBAAC0D,EAAA,EAAD,CAAQC,QAAQ,SAASR,KAAK,KAAK/C,QAxOvB,WACpBqC,QAAQC,IAAI,WAAYG,GACxB,IAAMkD,EAAmB,IAAIC,IAAInD,GACjC,GAAGlC,EAAUmD,OAAO,EAAE,CACpB,IAAMY,EAAS3D,EAAYgD,QAAO,SAACtC,GACjC,OAAQsE,EAAiBE,IAAIxE,MAE/BT,EAAe0D,OACZ,CACH,IAAMA,EAASnD,EAAWwC,QAAO,SAACtC,GAChC,OAAQsE,EAAiBE,IAAIxE,MAE/BH,EAAcoD,GAGhBd,IAAQC,QAAQ,6CAyNR,qBAIF,yBAAK7D,UAAU,SACf,kBAAC,EAAD,CACEZ,YAAaA,GACbC,mBAlGiB,SAACuF,EAAOC,GACjCE,GAAc,CAAEH,MAAOA,EAAOC,IAAKA,KAkG3BvF,MACEqB,EAAUmD,OAAS,EAAI/C,EAAY+C,OAASvC,EAAWuC,WAM5DU,GACAvB,KCvXMiD,MARf,WACE,OACC,oCACC,kBAACxF,EAAD,QCGgByF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3F,MAAK,SAAA4F,GACjCA,EAAaC,iB","file":"static/js/main.eb7021ad.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst USER_API_BASE_URL = \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\r\n\r\n\r\nclass UserService {\r\n   \r\n    getUsers(){\r\n        return axios.get(USER_API_BASE_URL);\r\n    }\r\n\r\n}\r\nexport default new UserService()\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Pagination = ({ showPerPage, onPaginationChange, total }) => {\r\n  \r\n  const [counter, setCounter] = useState(1);\r\n  useEffect(() => {\r\n    const value = showPerPage * counter;\r\n    onPaginationChange(value - showPerPage, value);\r\n  }, [counter]);\r\n\r\n  const onButtonClick = (type) => {\r\n    if (type === \"‹\") {\r\n      if (counter === 1) {\r\n        setCounter(1);\r\n      } else {\r\n        setCounter(counter - 1);\r\n      }\r\n    } else if (type === \"›\") {\r\n      if (Math.ceil(total / showPerPage) === counter) {\r\n        setCounter(counter);\r\n      } else {\r\n        setCounter(counter + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul class=\"pagination\">\r\n        <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              href=\"!#\"\r\n              onClick={() => setCounter(1)}\r\n            >\r\n              «\r\n            </a>\r\n          </li>\r\n          <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              href=\"!#\"\r\n              onClick={() => onButtonClick(\"‹\")}\r\n            >\r\n              ‹\r\n            </a>\r\n          </li>\r\n\r\n          {new Array(Math.ceil(total / showPerPage)).fill(\"\").map((el, index) => (\r\n            <li class={`page-item ${index + 1 === counter ? \"active\" : null}`}>\r\n              <a\r\n                class=\"page-link\"\r\n                href=\"!#\"\r\n                onClick={() => setCounter(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </a>\r\n            </li>\r\n          ))}\r\n          <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              href=\"!#\"\r\n              onClick={() => onButtonClick(\"›\")}\r\n            >\r\n              ›\r\n            </a>\r\n          </li>\r\n          <li class=\"page-item\">\r\n            <a\r\n              class=\"page-link\"\r\n              href=\"!#\"\r\n              onClick={() => setCounter(Math.ceil(total/showPerPage))}\r\n            >\r\n              »\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect, useState } from \"react\";\r\nimport { message } from \"antd\";\r\nimport { Button, Table, Modal, Form } from \"react-bootstrap\";\r\nimport UserService from \"../services/UserService\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nexport default function User() {\r\n  const [searchVal, setSearchVal] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const [tableFilter, setTableFilter] = useState([]);\r\n\r\n  useEffect(() => {\r\n    UserService.getUsers().then((res) => {\r\n      setUsers(res.data);\r\n      setDataSource(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const [dataSource, setDataSource] = useState(users);\r\n\r\n  const filterData = (e) => {\r\n    if (e.target.value !== \"\") {\r\n      setSearchVal(e.target.value);\r\n      const filterTable = dataSource.filter((o) =>\r\n        Object.keys(o).some((k) =>\r\n          String(o[k]).toLowerCase().includes(e.target.value.toLowerCase())\r\n        )\r\n      );\r\n      console.log(\"filterTable\", filterTable);\r\n      setTableFilter([...filterTable]);\r\n    } else {\r\n      setSearchVal(e.target.value);\r\n      setDataSource([...dataSource]);\r\n    }\r\n  };\r\n  const [user, setUser] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    role: \"\",\r\n  });\r\n  const [deletePopup, setDeletePopup] = useState(false);\r\n  const clearUser = () => {\r\n    let user = {\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      role: \"\",\r\n    };\r\n    setUser(user);\r\n  };\r\n  const [show, setShow] = useState(false);\r\n  const [action, setAction] = useState(\"ADD\");\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setAction(\"EDIT\");\r\n    clearUser();\r\n  };\r\n\r\n \r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(\"user\", value);\r\n    setUser({\r\n      ...user,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  /** USER CRUD START */\r\n  const editUser = (user) => {\r\n    console.log(\"obj\", user);\r\n    setAction(\"EDIT\");\r\n    setShow(true);\r\n    setUser(user);\r\n  };\r\n  const saveUser = () => {\r\n    console.log(\"user\", user);\r\n    if(searchVal.length >0){\r\n    const newArr = tableFilter.map(obj => {\r\n        if (obj.id === user.id) {\r\n          return user;\r\n        }\r\n      \r\n        return obj;\r\n      });\r\n     \r\n      setTableFilter(newArr);\r\n    }else{\r\n      const newArr = dataSource.map(obj => {\r\n        if (obj.id === user.id) {\r\n          return user;\r\n        }\r\n      \r\n        return obj;\r\n      });\r\n      \r\n      setDataSource(newArr);\r\n    }\r\n   \r\n    clearUser();\r\n\r\n    if (action === \"ADD\") {\r\n      message.success(\"User successfully saved\");\r\n    } else {\r\n      message.success(\"User successfully updated\");\r\n    }\r\n\r\n    setShow(false);\r\n  };\r\n  const deleteUser = () => {\r\n    console.log(\"delete user\", user);\r\n    message.success(\"User successfully deleted\");\r\n    setDeletePopup(false);\r\n    if(searchVal.length>0){\r\n      setTableFilter(tableFilter.filter((e)=>{\r\n         return e !== user;\r\n      }));\r\n    }else{\r\n      setDataSource(\r\n        dataSource.filter((e) => {\r\n          return e !== user;\r\n        })\r\n      );\r\n    }\r\n    \r\n  };\r\n  const deleteConfirm = (user) => {\r\n    setUser(user);\r\n    setDeletePopup(true);\r\n  };\r\n  const [tempUser, setTempUser] = useState([]);\r\n\r\n  const onItemCheck = (item) => {\r\n    setTempUser([item, ...tempUser]);\r\n  };\r\n\r\n  const deleteAllUser = () => {\r\n    console.log(\"tempUser\", tempUser);\r\n    const namesToDeleteSet = new Set(tempUser);\r\n    if(searchVal.length>0){\r\n      const newArr = tableFilter.filter((name) => {\r\n        return !namesToDeleteSet.has(name);\r\n      });\r\n      setTableFilter(newArr);\r\n    }else{\r\n      const newArr = dataSource.filter((name) => {\r\n        return !namesToDeleteSet.has(name);\r\n      });\r\n      setDataSource(newArr);\r\n    }\r\n   \r\n    message.success(\"All Selected Users deleted successfully\");\r\n  };\r\n\r\n  /** USER CRUD END */\r\n\r\n \r\n  const deleteConfirmTemplate = (\r\n    <>\r\n      <Modal\r\n        size=\"sm\"\r\n        show={deletePopup}\r\n        onHide={() => setDeletePopup(false)}\r\n        aria-labelledby=\"example-modal-sizes-title-sm\"\r\n      >\r\n        <Modal.Header closeButton>Delete User</Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure to delete this User?</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              setDeletePopup(false);\r\n            }}\r\n          >\r\n            No\r\n          </Button>\r\n          <Button variant=\"primary\" size=\"sm\" onClick={deleteUser}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n  const addUserForm = (\r\n    <>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>User Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={user.name}\r\n            onChange={(e) => handleChange(e)}\r\n            placeholder=\"Enter Username\"\r\n          />\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={user.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Label>Mobile</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"role\"\r\n            value={user.role}\r\n            onChange={handleChange}\r\n            placeholder=\"Enter Mobile\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n  const editUserForm = (\r\n    <>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>User Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={user.name}\r\n            onChange={(e) => handleChange(e)}\r\n            placeholder=\"Enter Username\"\r\n          />\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={user.email}\r\n            onChange={(e) => handleChange(e)}\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Label>Mobile</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"role\"\r\n            value={user.role}\r\n            onChange={(e) => handleChange(e)}\r\n            placeholder=\"Enter Mobile\"\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n  const userModal = (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {action === \"ADD\" ? \"Add New User\" : \"Edit User\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{action === \"ADD\" ? addUserForm : editUserForm}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveUser}>\r\n            {action === \"ADD\" ? \"Save Changes\" : \"Update Changes\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n  // Pagination Logic Start\r\n  const [showPerPage, setShowPerPage] = useState(10);\r\n  const [pagination, setPagination] = useState({\r\n    start: 0,\r\n    end: showPerPage,\r\n  });\r\n\r\n  const onPaginationChange = (start, end) => {\r\n    setPagination({ start: start, end: end });\r\n  };\r\n  // Pagination Logic End\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mt-5\">\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            placeholder=\"search..\"\r\n            value={searchVal}\r\n            onChange={filterData}\r\n          />\r\n        </div>\r\n\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Role</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {searchVal.length > 0\r\n              ? tableFilter\r\n                  .slice(pagination.start, pagination.end)\r\n                  .map((obj) => {\r\n                    return (\r\n                      <tr key={obj.id}>\r\n                        <td>\r\n                        <input\r\n                              type=\"checkbox\"\r\n                              class=\"custom-control-input\"\r\n                              onChange={(e) => onItemCheck(obj)}\r\n                            />\r\n                        </td>\r\n                        <td>{obj.name}</td>\r\n                        <td>{obj.email}</td>\r\n                        <td>{obj.role}</td>\r\n                        <td>\r\n                          <Button variant=\"info\" onClick={() => editUser(obj)}>\r\n                            Edit\r\n                          </Button>\r\n                        </td>\r\n                        <td>\r\n                          <Button\r\n                            variant=\"danger\"\r\n                            onClick={() => deleteConfirm(obj)}\r\n                          >\r\n                            Delete\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })\r\n              : dataSource\r\n                  .slice(pagination.start, pagination.end)\r\n                  .map((obj) => {\r\n                    return (\r\n                      <tr key={obj.id}>\r\n                        <td>\r\n                          \r\n                            <input\r\n                              type=\"checkbox\"\r\n                              class=\"custom-control-input\"\r\n                              onChange={(e) => onItemCheck(obj)}\r\n                            />\r\n                          \r\n                        </td>\r\n                        <td>{obj.name}</td>\r\n                        <td>{obj.email}</td>\r\n                        <td>{obj.role}</td>\r\n                        <td>\r\n                          \r\n                        <a href=\"#\" className=\"btn text-dark\"><i  className=\"fa fa-edit\" onClick={() => editUser(obj)}></i></a> \r\n                         <a href=\"#\" className=\"btn text-danger\"><i className=\"fa fa-trash fa-lg\"  onClick={() => deleteConfirm(obj)}></i></a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n          </tbody>\r\n        </Table>\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <Button variant=\"danger\" size=\"sm\" onClick={deleteAllUser}>\r\n              Deleted Selected\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-9\">\r\n          <Pagination\r\n            showPerPage={showPerPage}\r\n            onPaginationChange={onPaginationChange}\r\n            total={\r\n              searchVal.length > 0 ? tableFilter.length : dataSource.length\r\n            }\r\n          />\r\n          </div>\r\n         \r\n        </div>\r\n        {userModal}\r\n        {deleteConfirmTemplate}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport User from './components/User';\n\n\nfunction App() {\n  return (\n   <>\n    <User/> \n   </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}